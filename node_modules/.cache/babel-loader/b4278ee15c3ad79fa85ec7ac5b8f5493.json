{"ast":null,"code":"var Attributes = require('./attributes');\n\nvar Messages = function (lang, messages) {\n  this.lang = lang;\n  this.messages = messages;\n  this.customMessages = {};\n  this.attributeNames = {};\n};\n\nMessages.prototype = {\n  constructor: Messages,\n\n  /**\n   * Set custom messages\n   *\n   * @param {object} customMessages\n   * @return {void}\n   */\n  _setCustom: function (customMessages) {\n    this.customMessages = customMessages || {};\n  },\n\n  /**\n   * Set custom attribute names.\n   *\n   * @param {object} attributes\n   */\n  _setAttributeNames: function (attributes) {\n    this.attributeNames = attributes;\n  },\n\n  /**\n   * Set the attribute formatter.\n   *\n   * @param {fuction} func\n   * @return {void}\n   */\n  _setAttributeFormatter: function (func) {\n    this.attributeFormatter = func;\n  },\n\n  /**\n   * Get attribute name to display.\n   *\n   * @param  {string} attribute\n   * @return {string}\n   */\n  _getAttributeName: function (attribute) {\n    var name = attribute;\n\n    if (this.attributeNames.hasOwnProperty(attribute)) {\n      return this.attributeNames[attribute];\n    } else if (this.messages.attributes.hasOwnProperty(attribute)) {\n      name = this.messages.attributes[attribute];\n    }\n\n    if (this.attributeFormatter) {\n      name = this.attributeFormatter(name);\n    }\n\n    return name;\n  },\n\n  /**\n   * Get all messages\n   *\n   * @return {object}\n   */\n  all: function () {\n    return this.messages;\n  },\n\n  /**\n   * Render message\n   *\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  render: function (rule) {\n    if (rule.customMessage) {\n      return rule.customMessage;\n    }\n\n    var template = this._getTemplate(rule);\n\n    var message;\n\n    if (Attributes.replacements[rule.name]) {\n      message = Attributes.replacements[rule.name].apply(this, [template, rule]);\n    } else {\n      message = this._replacePlaceholders(rule, template, {});\n    }\n\n    return message;\n  },\n\n  /**\n   * Get the template to use for given rule\n   *\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  _getTemplate: function (rule) {\n    var messages = this.messages;\n    var template = messages.def;\n    var customMessages = this.customMessages;\n    var formats = [rule.name + '.' + rule.attribute, rule.name];\n\n    for (var i = 0, format; i < formats.length; i++) {\n      format = formats[i];\n\n      if (customMessages.hasOwnProperty(format)) {\n        template = customMessages[format];\n        break;\n      } else if (messages.hasOwnProperty(format)) {\n        template = messages[format];\n        break;\n      }\n    }\n\n    if (typeof template === 'object') {\n      template = template[rule._getValueType()];\n    }\n\n    return template;\n  },\n\n  /**\n   * Replace placeholders in the template using the data object\n   *\n   * @param  {Rule} rule\n   * @param  {string} template\n   * @param  {object} data\n   * @return {string}\n   */\n  _replacePlaceholders: function (rule, template, data) {\n    var message, attribute;\n    data.attribute = this._getAttributeName(rule.attribute);\n    data[rule.name] = data[rule.name] || rule.getParameters().join(',');\n\n    if (typeof template === 'string' && typeof data === 'object') {\n      message = template;\n\n      for (attribute in data) {\n        message = message.replace(new RegExp(':' + attribute, 'g'), data[attribute]);\n      }\n    }\n\n    return message;\n  }\n};\nmodule.exports = Messages;","map":{"version":3,"names":["Attributes","require","Messages","lang","messages","customMessages","attributeNames","prototype","constructor","_setCustom","_setAttributeNames","attributes","_setAttributeFormatter","func","attributeFormatter","_getAttributeName","attribute","name","hasOwnProperty","all","render","rule","customMessage","template","_getTemplate","message","replacements","apply","_replacePlaceholders","def","formats","i","format","length","_getValueType","data","getParameters","join","replace","RegExp","module","exports"],"sources":["/home/rnrifai/Documents/Eduwork/tugas-react-master/node_modules/validatorjs/src/messages.js"],"sourcesContent":["var Attributes = require('./attributes');\n\nvar Messages = function(lang, messages) {\n  this.lang = lang;\n  this.messages = messages;\n  this.customMessages = {};\n  this.attributeNames = {};\n};\n\nMessages.prototype = {\n  constructor: Messages,\n\n  /**\n   * Set custom messages\n   *\n   * @param {object} customMessages\n   * @return {void}\n   */\n  _setCustom: function(customMessages) {\n    this.customMessages = customMessages || {};\n  },\n\n  /**\n   * Set custom attribute names.\n   *\n   * @param {object} attributes\n   */\n  _setAttributeNames: function(attributes) {\n    this.attributeNames = attributes;\n  },\n\n  /**\n   * Set the attribute formatter.\n   *\n   * @param {fuction} func\n   * @return {void}\n   */\n  _setAttributeFormatter: function(func) {\n    this.attributeFormatter = func;\n  },\n\n  /**\n   * Get attribute name to display.\n   *\n   * @param  {string} attribute\n   * @return {string}\n   */\n  _getAttributeName: function(attribute) {\n    var name = attribute;\n    if (this.attributeNames.hasOwnProperty(attribute)) {\n      return this.attributeNames[attribute];\n    } else if (this.messages.attributes.hasOwnProperty(attribute)) {\n      name = this.messages.attributes[attribute];\n    }\n\n    if (this.attributeFormatter) {\n      name = this.attributeFormatter(name);\n    }\n\n    return name;\n  },\n\n  /**\n   * Get all messages\n   *\n   * @return {object}\n   */\n  all: function() {\n    return this.messages;\n  },\n\n  /**\n   * Render message\n   *\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  render: function(rule) {\n    if (rule.customMessage) {\n      return rule.customMessage;\n    }\n    var template = this._getTemplate(rule);\n\n    var message;\n    if (Attributes.replacements[rule.name]) {\n      message = Attributes.replacements[rule.name].apply(this, [template, rule]);\n    } else {\n      message = this._replacePlaceholders(rule, template, {});\n    }\n\n    return message;\n  },\n\n  /**\n   * Get the template to use for given rule\n   *\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  _getTemplate: function(rule) {\n\n    var messages = this.messages;\n    var template = messages.def;\n    var customMessages = this.customMessages;\n    var formats = [rule.name + '.' + rule.attribute, rule.name];\n\n    for (var i = 0, format; i < formats.length; i++) {\n      format = formats[i];\n      if (customMessages.hasOwnProperty(format)) {\n        template = customMessages[format];\n        break;\n      } else if (messages.hasOwnProperty(format)) {\n        template = messages[format];\n        break;\n      }\n    }\n\n    if (typeof template === 'object') {\n      template = template[rule._getValueType()];\n    }\n\n    return template;\n  },\n\n  /**\n   * Replace placeholders in the template using the data object\n   *\n   * @param  {Rule} rule\n   * @param  {string} template\n   * @param  {object} data\n   * @return {string}\n   */\n  _replacePlaceholders: function(rule, template, data) {\n    var message, attribute;\n\n    data.attribute = this._getAttributeName(rule.attribute);\n    data[rule.name] = data[rule.name] || rule.getParameters().join(',');\n\n    if (typeof template === 'string' && typeof data === 'object') {\n      message = template;\n\n      for (attribute in data) {\n        message = message.replace(new RegExp(':' + attribute, 'g'), data[attribute]);\n      }\n    }\n\n    return message;\n  }\n\n};\n\nmodule.exports = Messages;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}